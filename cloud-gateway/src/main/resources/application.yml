spring:
  application:
    name: cloud-gateway

  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true

      # üåç CORS global para permitir peticiones desde el frontend (Next.js)
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true

      # ‚öôÔ∏è (opcional) Definici√≥n de rutas si no usas discovery locator
      # routes:
      #   - id: user-service
      #     uri: lb://user-service
      #     predicates:
      #       - Path=/user-service/**
      #     filters:
      #       - StripPrefix=1

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: gateway,actuator,health,info
  gateway:
    enabled: true
    actuator:
      verbose:
        enabled: true

logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.cloud.netflix.eureka: TRACE
    com.netflix.discovery: INFO
    org.springframework.web.reactive.function.client.ExchangeFunctions: TRACE
    reactor.netty.http.client: TRACE
